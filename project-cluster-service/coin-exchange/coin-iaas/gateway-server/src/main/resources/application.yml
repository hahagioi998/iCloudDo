server:
  port: 80
spring:
  application:
    name: gateway-server
  cloud:
    nacos:
      discovery:
        server-addr: nacos-server:8848
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true # 不区分大小写，都可以路由到
      routes:
        - id: admin-service_router
          uri: lb://admin-service
          predicates:
            - Path=/admin/**
          filters:
            - StripPrefix=1 # 将当前访问/admin/login -> 将admin自动去掉
        - id: member-service_router
          uri: lb://coin-member-service
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1 # 将当前访问/user/login -> 将user自动去掉
        - id: finance-service_router
          uri: lb://finance-service
          predicates:
            - Path=/finance/**
          filters:
            - StripPrefix=1 # 将当前访问/finance/xx -> 将finance自动去掉
        - id: exchange-service_router # 交易系统的路由
          uri: lb://exchange-service   # 转发到那个目的地
          predicates:
            - Path=/exchange/**
          filters:
            - StripPrefix=1 # 当前端访问/exchange/xx,exchange
    # 通过网关来完成对2 种维度的限流： 网关维度 + API 分组
    sentinel:
      transport:
        dashboard: sentinel-server:8858  # sentinel-dashboard 放在ecs 里面
      datasource:
#        ds1.file:
#          file: classpath:gw-flow.json  # 网关 + API分组的限流
#          ruleType: gw-flow
        ds1.nacos: #com.alibaba.csp.sentinel.datasource.nacos.NacosDataSource 使用Nacos持久化我的sentinel 数据时，需要添加nacos-datasource的依赖
          serverAddr: nacos-server:8848
          dataId: gw-flow
          ruleType: gw-flow
#
#        ds2.file:
#          file: classpath:api-group.json
#          ruleType: gw-api-group
        ds2.nacos:
          serverAddr: nacos-server:8848
          dataId: gw-api-group
          ruleType: gw-api-group # 我们演示了sentinel-dashboard 的规则的定义，而且规则定义好了后，我们的网关能立马的感知到（生效）（nacos无法感知），但是我们下次重启，会丢失规则。--》nacos
      eager: true # 服务启动直接建立心跳连接

  redis:
    host: 192.168.56.10
    port: 6379
#        ds1.file:
#          file: classpath:gw-flow.json # 网关 + API分组的限流
#          ruleType: gw-flow
#        ds2.file:
#          file: classpath:api-group.json # api-flow.json 接口的分组
#          ruleType: gw-api-group
management:
  endpoints:
    web:
      exposure:
        include: '*'